services:

  broker-service:
    build:
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    container_name: broker-service
    restart: always
    ports:
      - "8000:8000"
    deploy:
      mode: replicated
      replicas: 1

  logger-service:
    build:
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    container_name: logger-service
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  auth-service:
    build:
      context: ./../auth-service
      dockerfile: ./../auth-service/auth-service.dockerfile
    container_name: auth-service
    restart: always
    ports:
      - "8001:80"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      DSN: "host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=UTC connect_timeout=5"

    depends_on:
      - postgres


  postgres:
    image: 'postgres:14.2'
    container_name: micro_db_pg
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - microservices_volume:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    container_name: micro_mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - microservices_volume:/data/db

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"


volumes:
  microservices_volume:


